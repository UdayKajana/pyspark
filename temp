WITH TestCombinations AS (
  -- Test col1 alone
  SELECT 
    1 as test_num,
    'col1' as columns,
    COUNT(*) as total_rows,
    COUNT(DISTINCT col1) as unique_combinations
  FROM your_table
  
  UNION ALL
  
  -- Test col1 + col2
  SELECT 
    2 as test_num,
    'col1 + col2' as columns,
    COUNT(*) as total_rows,
    COUNT(DISTINCT CONCAT(col1, '|', col2)) as unique_combinations
  FROM your_table
  
  UNION ALL
  
  -- Test col1 + col2 + col3
  SELECT 
    3 as test_num,
    'col1 + col2 + col3' as columns,
    COUNT(*) as total_rows,
    COUNT(DISTINCT CONCAT(col1, '|', col2, '|', col3)) as unique_combinations
  FROM your_table
  
  UNION ALL
  
  -- Test col1 + col2 + col3 + col4
  SELECT 
    4 as test_num,
    'col1 + col2 + col3 + col4' as columns,
    COUNT(*) as total_rows,
    COUNT(DISTINCT CONCAT(col1, '|', col2, '|', col3, '|', col4)) as unique_combinations
  FROM your_table
)

SELECT 
  columns,
  total_rows,
  unique_combinations,
  CASE 
    WHEN total_rows = unique_combinations THEN 'Is Candidate Key'
    ELSE 'Not a Candidate Key'
  END as is_candidate_key,
  CASE 
    WHEN total_rows = unique_combinations THEN 'Found candidate key'
    ELSE FORMAT('Missing %d unique combinations', total_rows - unique_combinations)
  END as details
FROM TestCombinations
ORDER BY test_num;
