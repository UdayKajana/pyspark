function removeDuplicateRows() {
  var ui = SpreadsheetApp.getUi();
  
  // Confirm before proceeding
  var response = ui.alert(
    'Remove Duplicates',
    'This will remove duplicate rows and keep only the first occurrence.\nDo you want to continue?',
    ui.ButtonSet.YES_NO
  );
  
  if (response !== ui.Button.YES) {
    return;
  }

  // Get the active sheet
  var sheet = SpreadsheetApp.getActiveSheet();
  var dataRange = sheet.getDataRange();
  var data = dataRange.getValues();
  
  // Exit if sheet is empty
  if (data.length <= 1) {
    ui.alert('Error', 'Sheet is empty or contains only headers.', ui.ButtonSet.OK);
    return;
  }

  // Keep track of unique rows using their string representation
  var seen = new Set();
  var uniqueRows = [];
  var duplicatesCount = 0;
  
  // Assuming first row is header
  var header = data[0];
  uniqueRows.push(header);
  
  // Check each row starting from index 1 (after header)
  for (var i = 1; i < data.length; i++) {
    var row = data[i];
    var rowString = JSON.stringify(row);
    
    if (!seen.has(rowString)) {
      seen.add(rowString);
      uniqueRows.push(row);
    } else {
      duplicatesCount++;
    }
  }
  
  // Clear the sheet and write unique rows
  sheet.clearContents();
  var newRange = sheet.getRange(1, 1, uniqueRows.length, uniqueRows[0].length);
  newRange.setValues(uniqueRows);
  
  // Auto-resize columns to fit content
  sheet.autoResizeColumns(1, uniqueRows[0].length);
  
  // Show completion message
  ui.alert(
    'Process Complete',
    'Removed ' + duplicatesCount + ' duplicate rows.\n' +
    'Remaining rows: ' + (uniqueRows.length - 1) + ' (excluding header)',
    ui.ButtonSet.OK
  );
}

// Add custom menu
function onOpen() {
  var ui = SpreadsheetApp.getUi();
  ui.createMenu('Custom Scripts')
    .addItem('Remove Duplicate Rows', 'removeDuplicateRows')
    .addToUi();
}
